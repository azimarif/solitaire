{"version":3,"sources":["cardsDetail.js","model/Card.js","model/Deck.js","model/Pile.js","model/utils.js","model/WinningSet.js","model/Game.js","view.js","index.js"],"names":["CARD_DETAIL","type","number","color","unicode","Card","_ref","Object","classCallCheck","this","draggable","card","Deck","cards","_this","forEach","push","lodash","shuffle","n","splice","pop","unshift","shift","Pile","setLastCardActive","numberOfCards","length","firstCard","makeDraggable","isValid","lastCard","getLastCard","isNext","cardStartIndex","findIndex","slice","firstCardNumber","index","WinningSet","dummyCard","spade","heart","club","diamond","cardSet","topCard","getTopCard","cardsDrawn","keys","suit","Game","deck","undefined","piles","winningSet","initializeCards","initializePileCards","count","pileCards","getFirstNCards","pile","setCards","drawACard","getDrawnCard","removeDrawnCard","pileId","removeCards","setId","removeCard","addCards","getCardsDrawn","addCard","props","react_default","a","createElement","id","className","classes","onDragStart","dragStart","onDragOver","dragOverEvent","onDrop","dropEvent","onClick","clickEvent","style","GameComponent","possibleConstructorReturn","getPrototypeOf","call","allowDrop","ev","preventDefault","bind","assertThisInitialized","drag","drop","drawCard","state","game","setup","latestCard","getDrawnCardFromDeck","view_Card","background","isWon","_this2","suits","key","display","join","_this3","child","createPileCard","upperSection","renderNewCard","renderWinningCardSet","element","i","createPile","setState","draggedElement","target","parentElement","draggedCard","split","draggingContainer","droppedElement","droppingContainer","React","Component","ReactDOM","render","src_GameComponent","document","getElementById"],"mappings":"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","file":"static/js/main.25d7cc60.chunk.js","sourcesContent":["const CARD_DETAIL = [\n  {\n    \"type\": \"spade\",\n    \"number\": \"1\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0A1}\"\n  },\n  {\n    \"type\": \"spade\",\n    \"number\": \"2\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0A2}\"\n  },\n  {\n    \"type\": \"spade\",\n    \"number\": \"3\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0A3}\"\n  },\n  {\n    \"type\": \"spade\",\n    \"number\": \"4\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0A4}\"\n  },\n  {\n    \"type\": \"spade\",\n    \"number\": \"5\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0A5}\"\n  },\n  {\n    \"type\": \"spade\",\n    \"number\": \"6\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0A6}\"\n  },\n  {\n    \"type\": \"spade\",\n    \"number\": \"7\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0A7}\"\n  },\n  {\n    \"type\": \"spade\",\n    \"number\": \"8\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0A8}\"\n  },\n  {\n    \"type\": \"spade\",\n    \"number\": \"9\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0A9}\"\n  },\n  {\n    \"type\": \"spade\",\n    \"number\": \"10\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0AA}\"\n  },\n  {\n    \"type\": \"spade\",\n    \"number\": \"11\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0AB}\"\n  },\n  {\n    \"type\": \"spade\",\n    \"number\": \"12\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0AD}\"\n  },\n  {\n    \"type\": \"spade\",\n    \"number\": \"13\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0AE}\"\n  },\n  {\n    \"type\": \"club\",\n    \"number\": \"1\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0D1}\"\n  },\n  {\n    \"type\": \"club\",\n    \"number\": \"2\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0D2}\"\n  },\n  {\n    \"type\": \"club\",\n    \"number\": \"3\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0D3}\",\n  },\n  {\n    \"type\": \"club\",\n    \"number\": \"4\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0D4}\"\n  },\n  {\n    \"type\": \"club\",\n    \"number\": \"5\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0D5}\"\n  },\n  {\n    \"type\": \"club\",\n    \"number\": \"6\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0D6}\"\n  },\n  {\n    \"type\": \"club\",\n    \"number\": \"7\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0D7}\"\n  },\n  {\n    \"type\": \"club\",\n    \"number\": \"8\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0D8}\"\n  },\n  {\n    \"type\": \"club\",\n    \"number\": \"9\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0D9}\"\n  },\n  {\n    \"type\": \"club\",\n    \"number\": \"10\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0DA}\"\n  },\n  {\n    \"type\": \"club\",\n    \"number\": \"11\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0DB}\"\n  },\n  {\n    \"type\": \"club\",\n    \"number\": \"12\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0DD}\"\n  },\n  {\n    \"type\": \"club\",\n    \"number\": \"13\",\n    \"color\": \"black\",\n    \"unicode\": \"\\u{1F0DE}\"\n  },\n  {\n    \"type\": \"diamond\",\n    \"number\": \"1\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0C1}\"\n  },\n  {\n    \"type\": \"diamond\",\n    \"number\": \"2\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0C2}\"\n  },\n  {\n    \"type\": \"diamond\",\n    \"number\": \"3\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0C3}\"\n  },\n  {\n    \"type\": \"diamond\",\n    \"number\": \"4\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0C4}\"\n  },\n  {\n    \"type\": \"diamond\",\n    \"number\": \"5\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0C5}\"\n  },\n  {\n    \"type\": \"diamond\",\n    \"number\": \"6\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0C6}\"\n  },\n  {\n    \"type\": \"diamond\",\n    \"number\": \"7\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0C7}\"\n  },\n  {\n    \"type\": \"diamond\",\n    \"number\": \"8\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0C8}\"\n  },\n  {\n    \"type\": \"diamond\",\n    \"number\": \"9\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0C9}\"\n  },\n  {\n    \"type\": \"diamond\",\n    \"number\": \"10\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0CA}\"\n  },\n  {\n    \"type\": \"diamond\",\n    \"number\": \"11\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0CB}\"\n  },\n  {\n    \"type\": \"diamond\",\n    \"number\": \"12\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0CD}\"\n  },\n  {\n    \"type\": \"diamond\",\n    \"number\": \"13\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0CE}\"\n  },\n  {\n    \"type\": \"heart\",\n    \"number\": \"1\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0B1}\"\n  },\n  {\n    \"type\": \"heart\",\n    \"number\": \"2\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0B2}\"\n  },\n  {\n    \"type\": \"heart\",\n    \"number\": \"3\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0B3}\"\n  },\n  {\n    \"type\": \"heart\",\n    \"number\": \"4\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0B4}\"\n  },\n  {\n    \"type\": \"heart\",\n    \"number\": \"5\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0B5}\"\n  },\n  {\n    \"type\": \"heart\",\n    \"number\": \"6\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0B6}\"\n  },\n  {\n    \"type\": \"heart\",\n    \"number\": \"7\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0B7}\"\n  },\n  {\n    \"type\": \"heart\",\n    \"number\": \"8\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0B8}\"\n  },\n  {\n    \"type\": \"heart\",\n    \"number\": \"9\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0B9}\"\n  },\n  {\n    \"type\": \"heart\",\n    \"number\": \"10\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0BA}\"\n  },\n  {\n    \"type\": \"heart\",\n    \"number\": \"11\",\n    \"color\": \"red\",\n    \"unicode\":  \"\\u{1F0BB}\"\n  },\n  {\n    \"type\": \"heart\",\n    \"number\": \"12\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0BD}\"\n  },\n  {\n    \"type\": \"heart\",\n    \"number\": \"13\",\n    \"color\": \"red\",\n    \"unicode\": \"\\u{1F0BE}\"\n  }\n]\n\nexport default CARD_DETAIL;","class Card {\n  constructor({ number, type, color, unicode }) {\n    this.number = number;\n    this.type = type;\n    this.color = color;\n    this.unicode = unicode;\n    this.draggable = false;\n  }\n\n  makeDraggable() {\n    this.draggable = true;\n  }\n\n  isNext(card) {\n    return +this.number - +card.number === 1;\n  }\n}\n\nexport default Card;\n","import cards from '../cardsDetail';\nimport lodash from 'lodash';\nimport Card from './Card';\n\nclass Deck {\n  constructor() {\n    this.cards = [];\n  }\n\n  initializeCards() {\n    cards.forEach(card => {\n      this.cards.push(new Card(card));\n    });\n    this.cards = lodash.shuffle(this.cards);\n  }\n\n  getFirstNCards(n) {\n    return this.cards.splice(0, n);\n  }\n\n  drawACard() {\n    const card = this.cards.pop();\n    this.cards.unshift(card);\n  }\n\n  getDrawnCard() {\n    return this.cards[0];\n  }\n\n  getCardsDrawn() {\n    return [this.cards[0]];\n  }\n\n  removeDrawnCard() {\n    this.cards.shift();\n  }\n\n  removeCards() {\n    this.cards.shift();\n  }\n}\n\nexport default Deck;\n","import { FIRST_ELEMENT } from './utils';\n\nclass Pile {\n  constructor() {\n    this.cards = [];\n  }\n\n  setCards(cards) {\n    this.cards = cards;\n    this.setLastCardActive();\n  }\n\n  getLastCard() {\n    const numberOfCards = this.cards.length;\n    return this.cards[numberOfCards - 1];\n  }\n\n  addCards(cards) {\n    const firstCard = cards[FIRST_ELEMENT];\n    if (this.cards.length < 1) {\n      if (+firstCard.number === 13) {\n        cards.forEach(card => {\n          this.cards.push(card);\n          card.makeDraggable();\n        });\n        return true;\n      }\n      return false;\n    }\n    if (this.isValid(firstCard)) {\n      cards.forEach(card => {\n        this.cards.push(card);\n        card.makeDraggable();\n      });\n      return true;\n    }\n    return false;\n  }\n\n  isValid(card) {\n    const lastCard = this.getLastCard();\n    if (!lastCard) return true;\n    return lastCard.color !== card.color && lastCard.isNext(card);\n  }\n\n  removeCards(cards) {\n    const firstCard = cards[0];\n    const cardStartIndex = this.cards.findIndex(\n      card => card.number === firstCard.number && card.color === firstCard.color\n    );\n    this.cards = this.cards.slice(0, cardStartIndex);\n    this.setLastCardActive();\n  }\n\n  setLastCardActive() {\n    const lastCard = this.getLastCard();\n    if (lastCard) {\n      lastCard.makeDraggable();\n    }\n  }\n\n  getCardsDrawn(firstCardNumber) {\n    const index = this.cards.findIndex(card => +card.number === +firstCardNumber && card.draggable);\n    return this.cards.slice(index);\n  }\n}\n\nexport default Pile;\n","const FIRST_ELEMENT = 0;\nconst FIRST_CARD_NUMBER = 1;\nconst TOTAL_PILES_COUNT = 7;\n\nconst isEmpty = list => {\n  if (!list) return true;\n  return list.length === 0;\n};\n\nexport { FIRST_ELEMENT, FIRST_CARD_NUMBER, TOTAL_PILES_COUNT, isEmpty };\n","import { FIRST_CARD_NUMBER } from './utils';\n\nclass WinningSet {\n  constructor() {\n    let dummyCard = { type: '', number: '', unicode: '', color: '' };\n    this.cards = {\n      spade: [dummyCard],\n      heart: [dummyCard],\n      club: [dummyCard],\n      diamond: [dummyCard]\n    };\n  }\n\n  addCards(cards) {\n    let card = cards[0];\n    const cardSet = this.cards[card.type];\n    if (this.isValid(card)) {\n      card.makeDraggable();\n      cardSet.unshift(card);\n      return true;\n    }\n    return false;\n  }\n\n  isValid(card) {\n    const topCard = this.cards[card.type][0];\n    if (!topCard && +card.number !== FIRST_CARD_NUMBER) return false;\n    if (topCard && !card.isNext(topCard)) return false;\n    return true;\n  }\n\n  removeCard() {\n    const card = this.cards.shift();\n    const topCard = this.getTopCard();\n    topCard.makeDraggable();\n    return card;\n  }\n\n  isWon() {\n    let cardsDrawn = 0;\n    Object.keys(this.cards).forEach(suit=> {\n      cardsDrawn += this.cards[suit].length;\n    })\n    return cardsDrawn === 52;\n  }\n}\n\nexport default WinningSet;\n","import CARD_DETAIL from '../cardsDetail';\nimport Deck from './Deck';\nimport Pile from './Pile';\nimport WinningSet from './WinningSet';\nimport { TOTAL_PILES_COUNT } from './utils';\n\nclass Game {\n  constructor() {\n    this.cards = CARD_DETAIL;\n    this.deck = undefined;\n    this.piles = {};\n    this.winningSet = new WinningSet();\n  }\n\n  setup() {\n    this.deck = new Deck();\n    this.deck.initializeCards();\n    this.initializePileCards();\n    // this.initializeWinningSet();\n  }\n\n  initializeWinningSet() {\n    this.winningSet = {\n      heart: new WinningSet('heart'),\n      club: new WinningSet('club'),\n      diamond: new WinningSet('diamond'),\n      spade: new WinningSet('spade')\n    };\n  }\n\n  initializePileCards() {\n    for (let count = 1; count <= TOTAL_PILES_COUNT; count++) {\n      const pileCards = this.deck.getFirstNCards(count);\n      let pile = new Pile();\n      pile.setCards(pileCards);\n      this.piles[count] = pile;\n    }\n  }\n\n  drawCard() {\n    this.deck.drawACard();\n  }\n\n  getDrawnCardFromDeck() {\n    return this.deck.getDrawnCard();\n  }\n\n  removeDrawnCardFromDeck() {\n    this.deck.removeDrawnCard();\n  }\n\n  removeCardFromPile(pileId, cards) {\n    this.piles[pileId].removeCards(cards);\n  }\n\n  removeCardFromSet(setId) {\n    const currentSet = this.winningSet[setId];\n    currentSet.removeCard();\n  }\n\n  addCardToPile(pileId, cards) {\n    const currentPile = this.piles[pileId];\n    return currentPile.addCards(cards);\n  }\n\n  getCardsDrawnFromPile(pileId, firstCardNumber) {\n    return this.piles[pileId].getCardsDrawn(firstCardNumber);\n  }\n\n  addCardToWinningSet(setId, card) {\n    const currentSet = this.winningSet[setId];\n    return currentSet.addCard(card);\n  }\n}\n\nexport default Game;\n","import React from 'react';\n\nfunction Card(props) {\n  const draggable = props.draggable === undefined;\n  return (\n    <div\n      id={props.id}\n      className={props.classes}\n      draggable={draggable}\n      onDragStart={props.dragStart}\n      onDragOver={props.dragOverEvent}\n      onDrop={props.dropEvent}\n      onClick={props.clickEvent}\n      style={props.style}\n    >\n      {props.unicode}\n    </div>\n  );\n}\n\nexport { Card };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './model/Game';\nimport { Card } from './view';\n\nconst DECK_UNICODE = '\\u{1F0A0}';\n\nclass GameComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.allowDrop = this.allowDrop.bind(this);\n    this.drag = this.drag.bind(this);\n    this.drop = this.drop.bind(this);\n    this.drawCard = this.drawCard.bind(this);\n    this.state = {\n      game: new Game()\n    };\n\n    this.state.game.setup();\n  }\n\n  renderNewCard() {\n    const latestCard = this.state.game.getDrawnCardFromDeck();\n    if(latestCard) {\n    return (\n      <Card\n        unicode={latestCard.unicode}\n        style={{ color: latestCard.color }}\n        clickEvent={this.drawCard}\n        dragStart={this.drag}\n      />\n    );\n    }\n    return (\n      <Card\n        unicode={''}\n        style={{ background:'transparent'}}\n      />\n    );\n  }\n\n  isWon() {\n    return this.state.game.winningSet.isWon();\n  }\n\n  renderWinningCardSet() {\n    const suits = Object.keys(this.state.game.winningSet.cards);\n    const winningSet = [];\n    suits.forEach(suit => {\n      let lastCard = this.state.game.winningSet.cards[suit][0];\n      let { unicode, color } = lastCard;\n\n      winningSet.push(\n        <Card\n          id={suit}\n          key={suit}\n          classes='box'\n          unicode={unicode}\n          dropEvent={this.drop}\n          dragOverEvent={this.allowDrop}\n          dragStart={this.drag}\n          style={{ color }}\n        />\n      );\n    });\n    return (\n      <div id='cardSet' style={{ display: 'flex' }}>\n        {winningSet}\n      </div>\n    );\n  }\n\n  createPileCard(card) {\n    const id = [card.type, card.color, card.number].join('_');\n    let unicode = DECK_UNICODE;\n    let classes = 'card hidden';\n    let style = {};\n    if (card.draggable) {\n      unicode = card.unicode;\n      classes = 'card';\n      style = { color: card.color };\n    }\n    return (\n      <Card\n        id={id}\n        key={id}\n        classes={classes}\n        unicode={unicode}\n        dropEvent={this.drop}\n        dragOverEvent={this.allowDrop}\n        dragStart={this.drag}\n        style={style}\n      />\n    );\n  }\n\n  createPile(pile, pileId) {\n    const child = [];\n    pile.cards.forEach(card => child.push(this.createPileCard(card)));\n    if (child.length > 0) {\n      return (\n        <div key={'pile' + pileId} id={'pile_' + pileId} className='pile'>\n          {child}\n        </div>\n      );\n    }\n    return (\n      <div key={'pile' + pileId} id={'pile_' + pileId} className='pile'>\n        <Card\n          id={'blankCard'}\n          key={'blankCard'}\n          classes={'card'}\n          draggable={false}\n          unicode={''}\n          dropEvent={this.drop}\n          dragOverEvent={this.allowDrop}\n          style={{ background: 'transparent' }}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const won = this.isWon();\n    if(won) {\n      return (\n        <div className='won'>Congratulations, you won!</div>\n      )\n    }\n\n    const upperSection = (\n      <div className='upper'>\n        <Card unicode={DECK_UNICODE} classes={'card hidden'} clickEvent={this.drawCard} />\n        <div id='deck' className='empty-box'>\n          {this.renderNewCard()}\n        </div>\n        {this.renderWinningCardSet()}\n      </div>\n    );\n\n    const element = [];\n    for (let i = 1; i <= 7; i++) {\n      let pile = this.state.game.piles[i];\n      element.push(this.createPile(pile, i));\n    }\n    return (\n      <div>\n        <div className='container'> {upperSection} </div>\n        <div id='allPile' className='container'>{element}</div>\n      </div>\n    );\n  }\n\n  drawCard() {\n    this.state.game.drawCard();\n    this.setState(this.state);\n  }\n\n  allowDrop = ev => ev.preventDefault();\n\n  drag(ev) {\n    const draggedElement = ev.target.parentElement.id;\n    const draggedCard = ev.target.id;\n    this.draggedCard = draggedCard.split('_');\n    if (draggedElement === 'deck') {\n      this.draggingContainer = this.state.game['deck'];\n      return;\n    }\n\n    if (draggedElement === 'cardSet') {\n      this.draggingContainer = this.state.game['winningSet'];\n      return;\n    }\n    const pileId = draggedElement.split('_')[1];\n    this.draggingContainer = this.state.game['piles'][pileId];\n  }\n\n  drop(ev) {\n    ev.preventDefault();\n    const droppedElement = ev.target.parentElement.id;\n    let pileId = droppedElement.split('_')[1];\n    if (!pileId) {\n      pileId = +ev.target.id.split('_')[1];\n    }\n    this.droppingContainer = this.state.game['piles'][pileId];\n\n    if (droppedElement === 'deck') {\n      this.droppingContainer = this.state.game['deck'];\n    }\n\n    if (droppedElement === 'cardSet') {\n      this.droppingContainer = this.state.game['winningSet'];\n    }\n\n    const cards = this.draggingContainer.getCardsDrawn(this.draggedCard[2]);\n    if (this.droppingContainer.addCards(cards)) {\n      this.draggingContainer.removeCards(cards);\n    }\n\n    this.setState(this.state);\n  }\n}\n\nReactDOM.render(<GameComponent />, document.getElementById('root'));\n"],"sourceRoot":""}